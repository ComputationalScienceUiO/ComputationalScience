TITLE: Computational Science: Materials Science
AUTHOR: Department of Physics, University of Oslo
DATE: Planned start: Fall 2018


===== Why Materials Science =====

Materials science is the study of materials, their design and properties. In computational material science we use the computer and computational tools to address basic questions in materials science. Numerical simulations is today effectively an experimental tool in material science -- materials can be designed and studied computationally before they are produced physically. However, this requires continous development of new theory, methods and approaches addressing material behavior from the atomic scale to macroscopic scales. Indeed, many new discoveries are currently done in the realm of metamaterials --- materials that are structured across several scales to produce specific properties -- as well as in nature-inspired materials --- materials that are designed based on biological materials or structures.

In the computational materials science program you learn to use the computer to model materials from the atomic to the macroscopic scale. You can work on large scale atomic simulations using molecular dynamics methods with reactive potentials, that allow you to build and study metamaterials with novel mechanical and chemical properties. You can study geological and biological materials and their interactions with water and salts, for example by studying optimal desalination membranes using molecular dynamics simulations, super-fast transport in nano-scale channels in the Earth's crust, or the formation of biologically active materials such as biocement.

Computational materials science may require very large scale simulations, providing you with skills in setting up, running and analyzing simulations on the worlds largest supercomputers, with possibilities for international student exchange periodes at international partners in China and the US.

Our students find employment as researchers at universities, research institutes and in industry, in more general industrial positions and in start-ups, or in government.



===== Structure and courses =====

The table here is an example of a suggested path for a Master of Science project,
with course work the first year and thesis work the last year.

|--------l------------------l----------------------l---------------l-------------|
|                   |  10 ECTS           |  10 ECTS     |       10 ECTS          |
|--------l------------------l----------------------l----------------l------------|
| 4th semester      | Master thesis      |   Master Thesis  | Master Thesis      |
|--------------------------------------------------------------------------------|
| 3rd semester      | Master thesis      |   Master Thesis  | Master Thesis      |
|--------------------------------------------------------------------------------|
| 2nd semester      | Master courses      |   Master courses  | Master courses   |
|--------------------------------------------------------------------------------|
| 1st semester      | Master courses      |   Master courses  | Master courses   |
|--------------------------------------------------------------------------------|

This  program is very flexible in its structure and students may opt for starting with their thesis
work from the first semester and scatter the respective course load across all four semesters.
Depending on interests and specializations, there are many courses on computational science which can make
up the required curriculum of course work. Furthermore, courses may be broken up in smaller modules,
avoding thereby the limitation of 10 ECTS per course only. Some of these courses are listed below.

=== Courses ===
Depending on specialization, the following courses that can be included as part of the compulsory 60 ECTS needed for a Master of Science degree are "described here":"https://computationalscienceuio.github.io/ComputationalScience/doc/pub/ProgramStructure/html/ProgramStructure-bs.html".



=== Graduate Certificates  ===
The program plans to offer graduate certificates in
* Three of the courses with label CS-MATH  gives a certificate in Computational Mathematics
* Three of the courses with label CS-PHYS gives a certificate in Computational Physics, Astrophysics, Chemistry, Materials Science  and Geoscience
* Three of the courses with label CS-BIO gives a certificate in Computational life science. 
* Three of the courses with label CS-INF gives a certificate in High-performance computing. 



=== Dual Degrees  ===
The program plans to offer dual degrees (more text to come)



===== Description of learning outcomes =====

The power of the scientific method lies in identifying a given problem
as a special case of an abstract class of problems, identifying
general solution methods for this class of problems, and applying a
general method to the specific problem (applying means, in the case of
computing, calculations by pen and paper, symbolic computing, or
numerical computing by ready-made and/or self-written software). This
generic view on problems and methods is particularly important for
understanding how to apply available, generic software to solve a
particular problem.


Computing competence represents a central element
in scientific problem solving, from basic education and research to
essentially almost all advanced problems in modern
societies. Computing competence is simply central to further
progress. It enlarges the body of tools available to students and
scientists beyond classical tools and allows for a more generic
handling of problems. Focusing on algorithmic aspects results in
deeper insights about scientific problems.

The learning outcomes are subdivided in three general categories, knowledge, skills and general competence.

* _Knowledge_: A candidate from this program

 * has deep knowledge of the scientific method and computational science at an advanced level, meaning that the candidate

  o has the ability to understand advanced scientific results in new fields
  o has fundamental understanding of methods and tools
  o can develop and apply advanced computational methods to scientific problems
  o is capable of judging and analyzing all parts of the obtained scientific results
  o can present results orally and in written form as scientific reports/articles
  o can propose new hypotheses and suggest solution paths
  o can generalize mathematical algorithms and apply them to new situations
  o can link computational models to specific applications and/or experimental data
  o can develop models and algorithms to describe experimental data
  o masters methods for reproducibility and how to link this to a sound ethical scienfitic conduct
  o has a thorough understanding of how computing is used to  solve  scientific problems
  o knows fundamental algorithms in computational science
  
 * has a fundamental understanding and knowledge of scientific work, meaning that
  o the candidate can develop hypotheses and suggest ways to test these
  o can use relevant analytical, experimental and numerical tools and results to test the scientific hypotheses
  o can generalize from numerical and experimental data to mathematical models and underlying principles
  o can analyze the results and evaluate their relevance with respect to the actual problems and/or hypotheses
  o can present the results according to good scientific practices

* _Skills_: A candidate from this program
 * has a deep understanding of what computing means, entailing several or all of the topics listed below
  o knows the most fundamental algorithms involved, how to optimize these and perform statistical uncertainty quantification
  o has overview of advanced algorithms and how they can be accessed in available software and how they are used to solve scientific problems
  o has knowledge and understands high-performance computing elements: memory usage, vectorization and parallel algorithms
  o can use effeciently high-performance computing resources, from compilers to hardware architectures
  o understands approximation errors and what can go wrong with algorithms
  o has knowledge of at least one computer algebra system and how it is applied to perform classical mathematics
  o has extensive experience with programming in a high-level language (MATLAB, Python, R)
  o has experience with programming in a compiled language (Fortran, C, C++)
  o has experience with implementing and applying numerical algorithms in reusable software that acknowledges the generic nature of the mathematical algorithms
  o has experience with debugging software
  o has experience with test frameworks and procedures
  o has experience with different visualization techniques for different types of data
  o can critically evaluate results and errors
  o can develop algorithms and software for complicated scientific problems independently and in collaboration with other students
  o masters software carpentry: can design a maintainable program in a systematic way, use version control systems, and write scripts to automate manual work
  o understands how to increase the efficiency of numerical algorithms and pertinent software
  o has knowledge of stringent requirements to efficiency and precision of software
  o understands tools to make science reproducible and has a sound ethical approach to scientific problems

* _General competence_: A candidate from this program

 * is able to develop professional competence through the thesis work, entailing:
  o mature professionally and be able to work independently
  o can communicate in a professional way scientific results, orally and in written form
  o can plan and complete a research project
  o can develop a scientific intuition and understanding that makes it possible to present and discuss scientific problems, results and uncertainties


 * is able to develop virtues, values and attitudes that lead to  a better understanding of ethical aspects of the scientific method, as well as promoting central aspects of the scientific method to society. This means for example that the candidate

  o can reflect on and develop strategies for making science reproducible and to promote the need for a proper ethical conduct
  o has a deep understanding of the role basic and applied  research and computing play for progress in society
  o is able to promote, use and develop version control tools in order to make science reproducible
  o is able to critically evaluate the consequences of own research and how this impacts society
  o matures an understanding of the links between basic and applied research and how these shape, in a fundamental way,  progress in science and technology
  o can develop an understading of the role research and science can play together with industry and society in general
  o can reflect over and develop learning strategies for life-long learning.

By completing a Master of Science thesis, the candidate will have developed a critical understanding of the scientific methods which have been studied, has a better understanding of the scientific process per se as well as having developed perspectives for future work and how to verify and validate scientific results.





===== Admission criteria: Materials Science  =====

The program has a minimum course requirement of 120 ECTS (European Credit Transfer System) at the undergraduate level (bachelor degree or equivalent) in astrophysics, bioscience, chemistry, computer science and informatics, geoscience, mathematics, materials science, mechanics and physics.

 o  Of these 120 ECTS, 40 ECTS have to include basic mathematics and programming courses, equivalent to the University of Oslo mathematics courses MAT1100, MAT1110, MAT1120 and at least one of the corresponding computing and programming courses INF1000/INF1110 or MAT-INF1100/MAT-INF1100L/BIOS1100/KJM-INF1xxx.

 o  The remaining 80 ECTS have to be within at most two of the fields of astrophysics, bioscience, chemistry, computer science and informatics, geoscience, mathematics, materials science, mechanics and physics. 40 of these 80 ECTS have to be advanced undergraduate courses at the 2000 and 3000 level and a minimum of 20 ECTS must be at the 3000 level within physics/material science/astrophysics/informatics/mathematics/mechanics.

 o An average mark C (European grading scale) is required for the 40 ECTS in mathematics and programming (corresponding to the University of Oslo courses MAT1100, MAT1110, MAT1120 and the corresponding computing and programming courses INF1000/INF1110 or MAT-INF1100/MAT-INF1100L/BIOS1100/KJM-INF1xxx or similar courses) and the 40 ECTS at the 2000 and 3000 level. A minimum of 20 ECTS must be at the 3000 level within physics/material science/astrophysics/informatics/mathematics/mechanics.





=====  Study abroad and international collaborators =====


Students at the University of Oslo may choose to "take parts of
their degrees at a university abroad":"http://www.uio.no/studier/utveksling/".
The University of Oslo has exchange agreements with other universities in different parts of the world. "The MN Faculty has additional exchange agreements with many universities abroad":"http://www.uio.no/studier/utveksling/avtaler/avtaleeiere/uio/".

Students in this program have a number of interesting international
exchange possibilities. The involved researchers have extensive
collaborations with: _add text_




===== Career prospects =====

Candidates who are capable of modeling and understanding complicated
systems in natural science, are in short supply in society.  The
computational methods and approaches to scientific problems students learn
when working on their thesis projects are very similar to the methods
they will use in later stages of their careers.  To handle large
numerical projects demands structured thinking and good analytical
skills and a thorough understanding of the problems to be solved. This
knowledge makes the students unique on the labor market.

Career opportunities are many, from research institutes, universities
and university colleges and a multitude of companies. Examples
include IBM, Hydro, Statoil, and Telenor.  The program gives an
excellent background for further studies, with a PhD as one possible
goal.

The program has also a strong international element which allows students to
gain important experience from international collaborations in
science, with the opportunity to spend parts of the time spent on
thesis work at research institutions abroad.





